#!/bin/bash

# Reattach branch generated by git-split to appropriate point in history.
# Usage: git-reattach <branch-name>

root_commit=`git log $1 | egrep "^commit [a-f0-9]+" | tail -1 | sed "s/^commit //"`
svn_rev=`git svn find-rev ${root_commit}`
if [ $root_commit ]; then
  echo "Found root commit for $1 at ${root_commit} (r${svn_rev})."
else
  echo "No root commit found for ${1}; aborting"'!'
  exit 1
fi

# Now find the latest possible branch point

until [ $branch_point ]; do
  branch_point=`git svn find-rev r${svn_rev} master 2>/dev/null`
  let svn_rev=svn_rev-1
done
svn_rev=`git svn find-rev ${branch_point}`
echo "Found branch point from master at ${branch_point} (r${svn_rev})."

echo "${root_commit} ${branch_point}" >> .git/info/temp_grafts
echo "Grafted $1 onto master."
